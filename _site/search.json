[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to My Site",
    "section": "",
    "text": "Hi! I’m Caroline\n\n\n\n\n\n\n\nI’m a Product Manager based in NYC passionate about building data and reporting tools that make information clear, actionable, and impactful. I love connecting the dots between business needs and technical solutions.\n\n\n\n## My Travel Map\nCheck out the places I've visited around the world!\n\n::: {#ceb1da45 .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport plotly.express as px\nfrom geopy.geocoders import Nominatim\n\n# List of cities\ncities = [\n    \"Boston, MA, USA\", \"Chicago, IL, USA\", \"San Diego, CA, USA\",\n    \"Los Angeles, CA, USA\", \"San Francisco, CA, USA\", \"Austin, TX, USA\",\n    \"Denver, CO, USA\", \"London, UK\", \"Dublin, IE\", \"Paris, France\",\n    \"Florence, IT\", \"Rome, IT\", \"Milan, IT\", \"Munich, DE\", \"Zurich, Switzerland\",\n    \"Phuket, Thailand\", \"Tokyo, JP\"\n]\n\n# Geocode cities\ngeolocator = Nominatim(user_agent=\"city_mapper\")\nlatitudes, longitudes = [], []\n\nfor city in cities:\n    location = geolocator.geocode(city)\n    if location:\n        latitudes.append(location.latitude)\n        longitudes.append(location.longitude)\n    else:\n        latitudes.append(None)\n        longitudes.append(None)\n\n# DataFrame\ndf = pd.DataFrame({\n    \"City\": cities,\n    \"Latitude\": latitudes,\n    \"Longitude\": longitudes\n})\n\n# Plotly map\nfig = px.scatter_geo(\n    df,\n    lat=\"Latitude\",\n    lon=\"Longitude\",\n    hover_name=\"City\",\n    projection=\"natural earth\",\n    title=\"Places I've Visited\",\n    template=\"plotly_dark\"\n)\nfig.update_traces(marker=dict(size=10, color=\"cyan\"))\nfig.show()\n\n                                                \n\n:::"
  },
  {
    "objectID": "pyspark_example.html",
    "href": "pyspark_example.html",
    "title": "PySpark Example",
    "section": "",
    "text": "from pyspark.sql import SparkSession\n\nspark = SparkSession.builder.appName(\"example\").getOrCreate()\n\n# Example data\ndata = [\n    (\"Caroline\", 32),\n    (\"Mike\", 34),\n    (\"Ryan\", 34),\n    (\"Katie\", 32)\n]\ncolumns = [\"Name\", \"Age\"]\n\n# Create DataFrame\ndf = spark.createDataFrame(data, columns)\ndf.show()\n\n+--------+---+\n|    Name|Age|\n+--------+---+\n|Caroline| 32|\n|    Mike| 34|\n|    Ryan| 34|\n|   Katie| 32|\n+--------+---+"
  },
  {
    "objectID": "cv.html",
    "href": "cv.html",
    "title": "My CV",
    "section": "",
    "text": "Senior Product Associate\n    55ip\n    Dec 2023 – Present\n  \n\n  \n    Portfolio Analytics Relationship Manager\n    Bloomberg\n    May 2022 – Dec 2023\n  \n\n  \n    Portfolio Product Analyst Team Leader\n    Bloomberg\n    Aug 2020 – May 2022\n  \n\n  \n    Senior Portfolio Product Analyst\n    Bloomberg\n    Sept 2017 – Aug 2020"
  },
  {
    "objectID": "contact.html",
    "href": "contact.html",
    "title": "",
    "section": "",
    "text": "cosull93@bu.edu\n  \n\n  \n    \n    (617) 851-4476\n  \n\n  \n    \n    linkedin.com/in/carolineosullivan2/\n  \n\n  \n    \n    github.com/cosull93"
  },
  {
    "objectID": "contact.html#get-in-touch",
    "href": "contact.html#get-in-touch",
    "title": "",
    "section": "",
    "text": "cosull93@bu.edu\n  \n\n  \n    \n    (617) 851-4476\n  \n\n  \n    \n    linkedin.com/in/carolineosullivan2/\n  \n\n  \n    \n    github.com/cosull93"
  }
]